{"ast":null,"code":"import _objectSpread from \"/var/www/html/meme-factory/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/var/www/html/meme-factory/src/App.js\";\nimport React from 'react';\nimport { Modal, ModalHeader, ModalBody, FormGroup, Label, NavbarBrand } from 'reactstrap';\nconst photos = [{\n  src: '/images/vict-baby.png'\n}, {\n  src: '/images/ned.jpeg'\n}, {\n  src: '/images/devilgirl.jpg'\n}, {\n  src: '/images/trump.jpg'\n}, {\n  src: '/images/one-does-not.jpg'\n}, {\n  src: '/images/dank.png'\n}, {\n  src: '/images/boy.png'\n}, {\n  src: '/images/sad.png'\n}, {\n  src: '/images/wolf.png'\n}, {\n  src: '/images/fry.jpg'\n}, {\n  src: '/images/jobs.jpg'\n}, {\n  src: '/images/phone.jpg'\n}, {\n  src: '/images/oldie.png'\n}, {\n  src: '/images/image.png'\n}, {\n  src: '/images/doubt.png'\n}, {\n  src: '/images/crying.png'\n}, {\n  src: '/images/sponge.png'\n}, {\n  src: '/images/dog.png'\n}, {\n  src: '/images/frust.png'\n}, {\n  src: '/images/web.png'\n}, {\n  src: '/images/penguin.png'\n}];\nconst initialState = {\n  toptext: \"\",\n  bottomtext: \"\",\n  isTopDragging: false,\n  isBottomDragging: false,\n  topY: \"10%\",\n  topX: \"50%\",\n  bottomX: \"50%\",\n  bottomY: \"90%\"\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.openImage = index => {\n      const image = photos[index];\n      const base_image = new Image();\n      base_image.src = image.src;\n      const base64 = this.getBase64Image(base_image);\n      this.setState(prevState => _objectSpread({\n        currentImage: index,\n        modalIsOpen: !prevState.modalIsOpen,\n        currentImagebase64: base64\n      }, initialState));\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => ({\n        modalIsOpen: !prevState.modalIsOpen\n      }));\n    };\n\n    this.changeText = event => {\n      this.setState({\n        [event.currentTarget.name]: event.currentTarget.value\n      });\n    };\n\n    this.getStateObj = (e, type) => {\n      let rect = this.imageRef.getBoundingClientRect();\n      const xOffset = e.clientX - rect.left;\n      const yOffset = e.clientY - rect.top;\n      let stateObj = {};\n\n      if (type === \"bottom\") {\n        stateObj = {\n          isBottomDragging: true,\n          isTopDragging: false,\n          bottomX: \"\".concat(xOffset, \"px\"),\n          bottomY: \"\".concat(yOffset, \"px\")\n        };\n      } else if (type === \"top\") {\n        stateObj = {\n          isTopDragging: true,\n          isBottomDragging: false,\n          topX: \"\".concat(xOffset, \"px\"),\n          topY: \"\".concat(yOffset, \"px\")\n        };\n      }\n\n      return stateObj;\n    };\n\n    this.handleMouseDown = (e, type) => {\n      const stateObj = this.getStateObj(e, type);\n      document.addEventListener('mousemove', event => this.handleMouseMove(event, type));\n      this.setState(_objectSpread({}, stateObj));\n    };\n\n    this.handleMouseMove = (e, type) => {\n      if (this.state.isTopDragging || this.state.isBottomDragging) {\n        let stateObj = {};\n\n        if (type === \"bottom\" && this.state.isBottomDragging) {\n          stateObj = this.getStateObj(e, type);\n        } else if (type === \"top\" && this.state.isTopDragging) {\n          stateObj = this.getStateObj(e, type);\n        }\n\n        this.setState(_objectSpread({}, stateObj));\n      }\n    };\n\n    this.handleMouseUp = event => {\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      this.setState({\n        isTopDragging: false,\n        isBottomDragging: false\n      });\n    };\n\n    this.convertSvgToImage = () => {\n      const svg = this.svgRef;\n      let svgData = new XMLSerializer().serializeToString(svg);\n      const canvas = document.createElement(\"canvas\");\n      canvas.setAttribute(\"id\", \"canvas\");\n      const svgSize = svg.getBoundingClientRect();\n      canvas.width = svgSize.width;\n      canvas.height = svgSize.height;\n      const img = document.createElement(\"img\");\n      img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svgData))));\n\n      img.onload = function () {\n        canvas.getContext(\"2d\").drawImage(img, 0, 0);\n        const canvasdata = canvas.toDataURL(\"image/png\");\n        const a = document.createElement(\"a\");\n        a.download = \"meme.png\";\n        a.href = canvasdata;\n        document.body.appendChild(a);\n        a.click();\n      };\n    };\n\n    this.state = _objectSpread({\n      currentImage: 0,\n      modalIsOpen: false,\n      currentImagebase64: null\n    }, initialState);\n  }\n\n  getBase64Image(img) {\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    var dataURL = canvas.toDataURL(\"image/png\");\n    return dataURL;\n  }\n\n  render() {\n    const image = photos[this.state.currentImage];\n    const base_image = new Image();\n    base_image.src = image.src;\n    var wrh = base_image.width / base_image.height;\n    var newWidth = 600;\n    var newHeight = newWidth / wrh;\n    const textStyle = {\n      fontFamily: \"Impact\",\n      fontSize: \"50px\",\n      textTransform: \"uppercase\",\n      fill: \"#FFF\",\n      stroke: \"#000\",\n      userSelect: \"none\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(NavbarBrand, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Make-a-Meme\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"This is a fun 5 hour project inspired by imgur. Built with React.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"You can add top and bottom text to a meme-template, move the text around and can save the image by downloading it.\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, photos.map((image, index) => React.createElement(\"div\", {\n      className: \"image-holder\",\n      key: image.src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"meme-top-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Top text\"), React.createElement(\"img\", {\n      style: {\n        width: \"100%\",\n        cursor: \"pointer\",\n        height: \"100%\"\n      },\n      alt: index,\n      src: image.src,\n      onClick: () => this.openImage(index),\n      role: \"presentation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"meme-bottom-caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Bottom text\"))))), React.createElement(Modal, {\n      className: \"meme-gen-modal\",\n      isOpen: this.state.modalIsOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Make-a-Meme\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      width: newWidth,\n      id: \"svg_ref\",\n      height: newHeight,\n      ref: el => {\n        this.svgRef = el;\n      },\n      xmlns: \"http://www.w3.org/2000/svg\",\n      xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"image\", {\n      ref: el => {\n        this.imageRef = el;\n      },\n      xlinkHref: this.state.currentImagebase64,\n      height: newHeight,\n      width: newWidth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"text\", {\n      style: _objectSpread({}, textStyle, {\n        zIndex: this.state.isTopDragging ? 4 : 1\n      }),\n      x: this.state.topX,\n      y: this.state.topY,\n      dominantBaseline: \"middle\",\n      textAnchor: \"middle\",\n      onMouseDown: event => this.handleMouseDown(event, 'top'),\n      onMouseUp: event => this.handleMouseUp(event, 'top'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.state.toptext), React.createElement(\"text\", {\n      style: textStyle,\n      dominantBaseline: \"middle\",\n      textAnchor: \"middle\",\n      x: this.state.bottomX,\n      y: this.state.bottomY,\n      onMouseDown: event => this.handleMouseDown(event, 'bottom'),\n      onMouseUp: event => this.handleMouseUp(event, 'bottom'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.state.bottomtext)), React.createElement(\"div\", {\n      className: \"meme-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"toptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Top Text\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"toptext\",\n      id: \"toptext\",\n      placeholder: \"Add text to the top\",\n      onChange: this.changeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"bottomtext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Bottom Text\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"bottomtext\",\n      id: \"bottomtext\",\n      placeholder: \"Add text to the bottom\",\n      onChange: this.changeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => this.convertSvgToImage(),\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Download Meme!\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/meme-factory/src/App.js"],"names":["React","Modal","ModalHeader","ModalBody","FormGroup","Label","NavbarBrand","photos","src","initialState","toptext","bottomtext","isTopDragging","isBottomDragging","topY","topX","bottomX","bottomY","App","Component","constructor","openImage","index","image","base_image","Image","base64","getBase64Image","setState","prevState","currentImage","modalIsOpen","currentImagebase64","toggle","changeText","event","currentTarget","name","value","getStateObj","e","type","rect","imageRef","getBoundingClientRect","xOffset","clientX","left","yOffset","clientY","top","stateObj","handleMouseDown","document","addEventListener","handleMouseMove","state","handleMouseUp","removeEventListener","convertSvgToImage","svg","svgRef","svgData","XMLSerializer","serializeToString","canvas","createElement","setAttribute","svgSize","width","height","img","btoa","unescape","encodeURIComponent","onload","getContext","drawImage","canvasdata","toDataURL","a","download","href","body","appendChild","click","ctx","dataURL","render","wrh","newWidth","newHeight","textStyle","fontFamily","fontSize","textTransform","fill","stroke","userSelect","map","cursor","el","zIndex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, ModalHeader, ModalBody, FormGroup, Label, NavbarBrand } from 'reactstrap';\n\nconst photos = [\n  { src: '/images/vict-baby.png' },\n  { src: '/images/ned.jpeg' },\n  { src: '/images/devilgirl.jpg' },\n  { src: '/images/trump.jpg' },\n  { src: '/images/one-does-not.jpg' },\n  { src: '/images/dank.png' },\n  { src: '/images/boy.png' },\n  { src: '/images/sad.png' },\n  { src: '/images/wolf.png' },\n  { src: '/images/fry.jpg' },\n  { src: '/images/jobs.jpg' },\n  { src: '/images/phone.jpg' },\n  { src: '/images/oldie.png' },\n  { src: '/images/image.png' },\n  { src: '/images/doubt.png' },\n  { src: '/images/crying.png' },\n  { src: '/images/sponge.png' },\n  { src: '/images/dog.png' },\n  { src: '/images/frust.png' },\n  { src: '/images/web.png' },\n  { src: '/images/penguin.png' }\n];\n\nconst initialState = {\n  toptext: \"\",\n  bottomtext: \"\",\n  isTopDragging: false,\n  isBottomDragging: false,\n  topY: \"10%\",\n  topX: \"50%\",\n  bottomX: \"50%\",\n  bottomY: \"90%\"\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentImage: 0,\n      modalIsOpen: false,\n      currentImagebase64: null,\n      ...initialState\n    };\n  }\n\n  openImage = (index) => {\n    const image = photos[index];\n    const base_image = new Image();\n    base_image.src = image.src;\n    const base64 = this.getBase64Image(base_image);\n    this.setState(prevState => ({\n      currentImage: index,\n      modalIsOpen: !prevState.modalIsOpen,\n      currentImagebase64: base64,\n      ...initialState\n    }));\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      modalIsOpen: !prevState.modalIsOpen\n    }));\n  }\n\n  changeText = (event) => {\n    this.setState({\n      [event.currentTarget.name]: event.currentTarget.value\n    });\n  }\n\n  getStateObj = (e, type) => {\n    let rect = this.imageRef.getBoundingClientRect();\n    const xOffset = e.clientX - rect.left;\n    const yOffset = e.clientY - rect.top;\n    let stateObj = {};\n    if (type === \"bottom\") {\n      stateObj = {\n        isBottomDragging: true,\n        isTopDragging: false,\n        bottomX: `${xOffset}px`,\n        bottomY: `${yOffset}px`\n      }\n    } else if (type === \"top\") {\n      stateObj = {\n        isTopDragging: true,\n        isBottomDragging: false,\n        topX: `${xOffset}px`,\n        topY: `${yOffset}px`\n      }\n    }\n    return stateObj;\n  }\n\n  handleMouseDown = (e, type) => {\n    const stateObj = this.getStateObj(e, type);\n    document.addEventListener('mousemove', (event) => this.handleMouseMove(event, type));\n    this.setState({\n      ...stateObj\n    })\n  }\n\n  handleMouseMove = (e, type) => {\n    if (this.state.isTopDragging || this.state.isBottomDragging) {\n      let stateObj = {};\n      if (type === \"bottom\" && this.state.isBottomDragging) {\n        stateObj = this.getStateObj(e, type);\n      } else if (type === \"top\" && this.state.isTopDragging){\n        stateObj = this.getStateObj(e, type);\n      }\n      this.setState({\n        ...stateObj\n      });\n    }\n  };\n\n  handleMouseUp = (event) => {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    this.setState({\n      isTopDragging: false,\n      isBottomDragging: false\n    });\n  }\n\n  convertSvgToImage = () => {\n    const svg = this.svgRef;\n    let svgData = new XMLSerializer().serializeToString(svg);\n    const canvas = document.createElement(\"canvas\");\n    canvas.setAttribute(\"id\", \"canvas\");\n    const svgSize = svg.getBoundingClientRect();\n    canvas.width = svgSize.width;\n    canvas.height = svgSize.height;\n    const img = document.createElement(\"img\");\n    img.setAttribute(\"src\", \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svgData))));\n    img.onload = function() {\n      canvas.getContext(\"2d\").drawImage(img, 0, 0);\n      const canvasdata = canvas.toDataURL(\"image/png\");\n      const a = document.createElement(\"a\");\n      a.download = \"meme.png\";\n      a.href = canvasdata;\n      document.body.appendChild(a);\n      a.click();\n    };\n  }\n\n  getBase64Image(img) {\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    var dataURL = canvas.toDataURL(\"image/png\");\n    return dataURL;\n  }\n\n  render() {\n    const image = photos[this.state.currentImage];\n    const base_image = new Image();\n    base_image.src = image.src;\n    var wrh = base_image.width / base_image.height;\n    var newWidth = 600;\n    var newHeight = newWidth / wrh;\n    const textStyle = {\n      fontFamily: \"Impact\",\n      fontSize: \"50px\",\n      textTransform: \"uppercase\",\n      fill: \"#FFF\",\n      stroke: \"#000\",\n      userSelect: \"none\"\n    }\n\n    return (\n      <div>\n        <div className=\"main-content\">\n          <div className=\"sidebar\">\n            <NavbarBrand href=\"/\">Make-a-Meme</NavbarBrand>\n            <p>\n              This is a fun 5 hour project inspired by imgur. Built with React.\n            </p>\n            <p>\n              You can add top and bottom text to a meme-template, move the text around and can save the image by downloading it.\n            </p>\n          </div>\n          <div className=\"content\">\n            {photos.map((image, index) => (\n              <div className=\"image-holder\" key={image.src}>\n                <span className=\"meme-top-caption\">Top text</span>\n                <img\n                  style={{\n                    width: \"100%\",\n                    cursor: \"pointer\",\n                    height: \"100%\"\n                  }}\n                  alt={index}\n                  src={image.src}\n                  onClick={() => this.openImage(index)}\n                  role=\"presentation\"\n                />\n              <span className=\"meme-bottom-caption\">Bottom text</span>\n              </div>\n            ))}\n          </div>\n        </div>\n        <Modal className=\"meme-gen-modal\" isOpen={this.state.modalIsOpen}>\n          <ModalHeader toggle={this.toggle}>Make-a-Meme</ModalHeader>\n          <ModalBody>\n            <svg\n              width={newWidth}\n              id=\"svg_ref\"\n              height={newHeight}\n              ref={el => { this.svgRef = el }}\n              xmlns=\"http://www.w3.org/2000/svg\"\n              xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n              <image\n                ref={el => { this.imageRef = el }}\n                xlinkHref={this.state.currentImagebase64}\n                height={newHeight}\n                width={newWidth}\n              />\n              <text\n                style={{ ...textStyle, zIndex: this.state.isTopDragging ? 4 : 1 }}\n                x={this.state.topX}\n                y={this.state.topY}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n                onMouseDown={event => this.handleMouseDown(event, 'top')}\n                onMouseUp={event => this.handleMouseUp(event, 'top')}\n              >\n                  {this.state.toptext}\n              </text>\n              <text\n                style={textStyle}\n                dominantBaseline=\"middle\"\n                textAnchor=\"middle\"\n                x={this.state.bottomX}\n                y={this.state.bottomY}\n                onMouseDown={event => this.handleMouseDown(event, 'bottom')}\n                onMouseUp={event => this.handleMouseUp(event, 'bottom')}\n              >\n                  {this.state.bottomtext}\n              </text>\n            </svg>\n            <div className=\"meme-form\">\n              <FormGroup>\n                <Label for=\"toptext\">Top Text</Label>\n                <input className=\"form-control\" type=\"text\" name=\"toptext\" id=\"toptext\" placeholder=\"Add text to the top\" onChange={this.changeText} />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"bottomtext\">Bottom Text</Label>\n                <input className=\"form-control\" type=\"text\" name=\"bottomtext\" id=\"bottomtext\" placeholder=\"Add text to the bottom\" onChange={this.changeText} />\n              </FormGroup>\n              <button onClick={() => this.convertSvgToImage()} className=\"btn btn-primary\">Download Meme!</button>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}